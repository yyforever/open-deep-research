x-postgres-config: &postgres-config
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_DB: open_deep_research
  POSTGRES_URL: postgresql://postgres:postgres@postgres:5432/open_deep_research

x-redis-config: &redis-config
  UPSTASH_REDIS_REST_URL: http://redis:6379
  UPSTASH_REDIS_REST_TOKEN: local_development_token

x-minio-config: &minio-config
  MINIO_ROOT_USER: minioadmin
  MINIO_ROOT_PASSWORD: minioadmin
  BLOB_READ_WRITE_TOKEN: minioadmin

services:
  app:
    build: .
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      <<: [*postgres-config, *redis-config, *minio-config]
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: ${AUTH_SECRET}
      # Required for Docker setup
      NEXTAUTH_URL_INTERNAL: http://app:3000
      NODE_ENV: development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    environment:
      <<: *postgres-config
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      <<: *minio-config
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  minio_data:
